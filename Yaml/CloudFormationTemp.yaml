AWSTemplateFormatVersion: 2010-09-09
Transform: 'AWS::Serverless-2016-10-31'
Description: Photo Album

Resources:
  photoalbumui:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: "photoalbumui"

  picturesb2:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: "picturesb2"
      
  LexBot:
    Type: Custom::LexBot
    Properties:
      BotName: PhotoBot
      BotAlias: TestBot
      BotVersion: 1
  
  search-photos:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName: search-photos
      Handler: searchindex.lambda_handler
      Runtime: python3.8
      Description: search images from elasticsearch
      MemorySize: 128
      Timeout: 30
      Role: 'arn:aws:iam::206476521689:role/service-role/search-photos-role-z6vccxx0'
      Events:
        ImageBot:
          Type: Api
          Properties:
            Path: /search-images
            Method: post
      Environment:
        Variables:
          REGION: us-west-2

  index-photos:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName: index-photos
      Handler: lambda_function.lambda_handler
      Runtime: python3.8
      Description: index photos that are uploaded in s3
      MemorySize: 128
      Timeout: 30
      Role: 'arn:aws:iam::206476521689:role/service-role/index-photos-role-qfkgka72'
      Events:
        s3trigger:
          Type: S3
          Properties:
            Bucket: !Ref picturesb2
            Events: s3:ObjectCreated:*
      Environment:
        Variables:
          REGION: us-west-2

  upload-image:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName: upload-image
      Handler: uploadimage.lambda_handler
      Runtime: python3.8
      Description: upload photos to s3
      MemorySize: 128
      Timeout: 30
      Role: 'arn:aws:iam::206476521689:role/service-role/index-photos-role-qfkgka72'
      Events:
        ImageBot:
          Type: Api
          Properties:
            Path: /upload-image
            Method: post
      Environment:
        Variables:
          REGION: us-west-2
      
  ElasticsearchDomain:
    Type: 'AWS::OpenSearchService::Domain'
    Properties:
      DomainName: "photosindex"
      ElasticsearchVersion: '7.10'
      ElasticsearchClusterConfig:
        DedicatedMasterEnabled: 'false'
        InstanceCount: '2'
        ZoneAwarenessEnabled: 'true'
        InstanceType: "t3.small.search"
      EBSOptions:
        EBSEnabled: true
        Iops: 0
        VolumeSize: 10
        VolumeType: "gp2"
      SnapshotOptions:
        AutomatedSnapshotStartHour: '0'
      AccessPolicies:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              AWS: '*'
            Action: 'es:*'
            Resource: 'arn:aws:es:us-west-2:206476521689:domain/photosindex/*'
      AdvancedOptions:
        rest.action.multi.allow_explicit_index: "true"

  FrontendPipeline:
    Type: AWS::CodePipeline::Pipeline
      Properties: 
        Name: photoalbumfrontend
        RoleArn: arn:aws:iam::206476521689:role/service-role/AWSCodePipelineServiceRole-us-west-2-photoalbumfrontend
  
  LambdhasPipeline:
    Type: AWS::CodePipeline::Pipeline
      Properties: 
        Name: Lambdha
        RoleArn: arn:aws:iam::206476521689:role/service-role/AWSCodePipelineServiceRole-us-west-2-Lambdha